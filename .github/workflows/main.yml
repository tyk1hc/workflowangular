env:
  APP_NAME: genai-angular-frontned

name: Deploy Frontend to Container App

on:
    push:
      branches:
        - main # The branch to trigger the deployment when you push a commit to it
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest # If you are using Nginx server
    environment: Development

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Connect to Azure Container Registry (ACR)
      - uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          # Container registry password
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
          # Container registry server url
          login-server: ${{ env.AZURE_CONATINER_REGISTRY_NAME }}.azurecr.io

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18 # Ensure Node.js version is compatible with your Angular project

      - name: Install dependencies
        run: |
            run: |
            if [ -e yarn.lock ]; then
                yarn install --frozen-lockfile
            elif [ -e package-lock.json ]; then
                npm ci
            else
                npm i
            fi

      - name: Install Angular CLI
        run: npm install -g @angular/cli # Install Angular CLI in the workflow environment

      - name: Build Angular app
        run: ng build --configuration production

      - name: copy Dockerfile, nginx conf
        run: |-
          cp ./Dockerfile ./dist/Dockerfile
          cp ./nginx.conf ./dist/nginx.conf

      # Container build and push to a Azure Container Registry (ACR)
      - id: docker-build-push
        name: Docker build and push to container registry
        working-directory: ./dist
        run: |
          docker build . -t ${{ env.AZURE_CONATINER_REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}
          docker push ${{ env.AZURE_CONATINER_REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}
